"""remove all mrdorders tables

Revision ID: f8c28306f72b
Revises: 255afeb7035b
Create Date: 2022-03-15 23:10:01.430085

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f8c28306f72b'
down_revision = '255afeb7035b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_mrdfood_id', table_name='mrdfood')
    op.drop_table('mrdfood')
    op.drop_index('ix_mrdorders_id', table_name='mrdorders')
    op.drop_table('mrdorders')
    op.drop_table('mrds')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mrds',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('invoice_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('restaurant', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('suburb', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('prep_time_minutes', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('order_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('food_total', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('commission_ex_vat_per', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('due_to_you', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('restaurant_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('platform_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], name='mrds_platform_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='mrds_pkey')
    )
    op.create_table('mrdorders',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('invoice_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('restaurant', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('suburb', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('prep_time_minutes', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('order_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('food_total', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('commission_ex_vat_per', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('due_to_you', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('restaurant_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('platform_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], name='mrdorders_platform_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='mrdorders_pkey')
    )
    op.create_index('ix_mrdorders_id', 'mrdorders', ['id'], unique=False)
    op.create_table('mrdfood',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('invoice_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('restaurant', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('suburb', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('prep_time_minutes', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('order_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('food_total', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('commission_ex_vat_per', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('due_to_you', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('restaurant_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('platform_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], name='mrdfood_platform_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='mrdfood_pkey')
    )
    op.create_index('ix_mrdfood_id', 'mrdfood', ['id'], unique=False)
    # ### end Alembic commands ###
